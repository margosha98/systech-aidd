services:
  postgres:
    image: postgres:16-alpine
    container_name: systech-aidd-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: systech_aidd
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  bot:
    build:
      context: .
      dockerfile: devops/dockerfile.bot
    container_name: systech-aidd-bot
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: devops/dockerfile.api
    container_name: systech-aidd-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: devops/dockerfile.frontend
    container_name: systech-aidd-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      API_URL_SERVER: http://api:8000
    depends_on:
      - api

volumes:
  postgres_data:

